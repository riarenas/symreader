# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# This pipeline will be extended to the MicroBuild template
pr:
  branches:
    include:
    - main
    - release/*
  paths:
    exclude:
    - README.md
    - docs/*
trigger:
  batch: true
  branches:
    include:
    - main
variables:
- template: /eng/common/templates-official/variables/pool-providers.yml@self
- name: _TeamName
  value: Roslyn
- name: TeamName
  value: Roslyn
resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release
extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    sdl:
      sourceAnalysisPool:
        name: $(DncEngInternalBuildPool)
        image: 1es-windows-2022-pt
        os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: build
      displayName: Build
      jobs:
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          enableMicrobuild: true
          enablePublishBuildArtifacts: true
          enablePublishTestResults: true
          enablePublishBuildAssets: true
          enablePublishUsingPipelines: true
          enableTelemetry: true
          enableSourceBuild: true
          helixRepo: dotnet/symreader
          jobs:
          - job: Windows
            pool:
              ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
                vmImage: 'windows-latest'
              ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
                name: $(DncEngInternalBuildPool)
                image: 1es-windows-2022-pt
                os: windows
            variables:
            - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
              - group: Publish-Build-Assets
              - name: _OfficialBuildArgs
                value: /p:DotNetSignType=$(_SignType) /p:TeamName=$(_TeamName) /p:DotNetPublishUsingPipelines=true /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
            - ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
              - name: _OfficialBuildArgs
                value: ''
            strategy:
              matrix:
                ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
                  Debug:
                    _BuildConfig: Debug
                    _SignType: test
                    _BuildArgs: ''
                Release:
                  _BuildConfig: Release
                  ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
                    _SignType: test
                    _BuildArgs: ''
                  ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
                    _SignType: real
                    _BuildArgs: $(_OfficialBuildArgs)
            steps:
            - checkout: self
              clean: true
            - script: eng\common\cibuild.cmd -configuration $(_BuildConfig) -prepareMachine $(_BuildArgs)
              displayName: Build and Test
          - ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
            - job: MacOS
              displayName: 'MacOS'
              pool:
                vmImage: 'macOS-latest'
              strategy:
                matrix:
                  Debug:
                    _BuildConfig: Debug
                    _SignType: none
                  Release:
                    _BuildConfig: Release
                    _SignType: none
              steps:
              - checkout: self
                clean: true
              - script: eng/common/cibuild.sh --configuration $(_BuildConfig) --prepareMachine
                displayName: Build and Test
            - job: Linux
              displayName: 'Linux'
              pool:
                vmImage: 'ubuntu-latest'
              strategy:
                matrix:
                  Debug:
                    _BuildConfig: Debug
                    _SignType: none
                  Release:
                    _BuildConfig: Release
                    _SignType: none
              steps:
              - checkout: self
                clean: true
              - script: eng/common/cibuild.sh --configuration $(_BuildConfig) --prepareMachine
                displayName: Build and Test
    - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
      - template: /eng/common/templates-official/post-build/post-build.yml@self
        parameters:
          publishingInfraVersion: 3
          enableSymbolValidation: false